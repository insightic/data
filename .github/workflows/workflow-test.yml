---
name: Workflow test

on:
  push:
  workflow_run:
    workflows: ["YAML Lint Check"]
    branches: [dev]
    types:
      - completed

jobs:
  run_analysis:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          # Fetches all history for all tags and branches
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install Chromium and ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser
          sudo apt-get install -y chromium-chromedriver

      - name: Check Chromium installation
        run: |
          which chromium-browser
          dpkg -L chromium-browser

      - name: Install from private repository
        run: |
          pip install git+https://$GITHUB_TOKEN:x-oauth-basic@github.com/insightic/pyinsightic.git#egg=pyinsightic
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_SECRET }}

      - name: Check pyinsightic availability
        run: python -c "import pyinsightic; print('pyinsightic is available')"

      - name: Run pyinsightic SosoValue analysis
        run: |
          for dir in */ ; do
          if [[ "$dir" == "tusd/" || "$dir" == "usde/" ]]; then
            if [ -f "${dir}data.yml" ]; then
                echo "Processing folder: $dir"
                export PYTHONPATH="$PYTHONPATH:$(pwd)"
                # python -c "import pyinsightic; analysis=pyinsightic.SosoValue(project_dir='$dir');analysis.run_analysis()"
                # python -c "import pyinsightic; analysis=pyinsightic.Linkedin(project_dir='$dir');analysis.run_analysis()"
                # python -c "import pyinsightic; analysis=pyinsightic.Twitter(project_dir='$dir');analysis.run_analysis()"
                # python -c "import pyinsightic; analysis=pyinsightic.SmartContractValidator(project_dir='$dir');analysis.run_analysis()"
                # python -c "import pyinsightic; analysis=pyinsightic.Stablecoin(project_dir='$dir');analysis.run_analysis()"
                python -c "import pyinsightic; analysis=pyinsightic.SecurityAssessment(project_dir='$dir');analysis.run_analysis()"
                echo "Analysis completed for $dir"
            fi
          fi
          done
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          DUNE_API_KEY: ${{ secrets.DUNE_API_KEY }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}

      - name: Commit and Push results
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
          # Add the results and check if there are changes; if so, commit them.
          git add */sosovalue.json
          git diff --cached --exit-code || git commit -m "Update sosovalue analysis results"
          git add */linkedin.json
          git diff --cached --exit-code || git commit -m "Update linkedin analysis results"
          git add */twitter.json
          git diff --cached --exit-code || git commit -m "Update twitter analysis results"
          git add */scv_results.json
          git diff --cached --exit-code || git commit -m "Update scv analysis results"
          git add */stablecoin_results.json
          git diff --cached --exit-code || git commit -m "Update stablecoin analysis results"
          git add */security_assessment.json
          git diff --cached --exit-code || git commit -m "Update security assessment analysis results"
          git push
